221205 [9] 접근제한의 종류와 static, package

1. 멤버변수 선언
[접근제한자] [static/final] 데이터형 변수명;

(1) 접근제한자 : 클래스의 데이터나 메소드에 대해 다른 클래스로부터 접근을 제한하는 것
- public : 접근을 제한하지 않음 다른 모든 클래스에서 사용 가능
- protected : 해당 클래스와 동일한 패키지에 있거나 상속 받은 클래스일 경우에만 사용 가능
- default : 접근제어자를 명시하지 않은 경우의 디폴트 접근제어자로, 같은 패키지내의 클래스는 public 권한을 갖고 접근 가능
- private : 해당 클래스만이 이 멤버를 사용할 수 있으며, 외부객체에서는 접근 불가함

(2) static : 클래스 변수라고도 불리며, 클래스로부터 생성된 객체들의 수와 상관없이 하나만 생성됨
클래스 변수라고도 불리며, 클래스로부터 생성된 객체들의 수와 상관없이 하나만 생성됨.
한 클래스로부터 생성된 모든 객체들은 클래스 변수를 공유함.

	(a) static의 이해
    
 	   : 객체들끼리 공유하고 싶은 정보가 있을 때 사용. 일명 깍두기.
    
	    필요에 의해 클래스를 만들고, 사용할 때는 new 연산자를 통해 객체로 만들어서 사용
  	    이러한 방식으로 모든 것을 처리하다 보면 아래와 같은 문제가 생길 수 있음.
    
	(b) static과 객체와의 관계
   
	 : 클래스 하나에서 객체를 무한대로 생성할 수 있지만, 전혀 다른 객체로 생성됨. 
    
   	 하지만, static이 붙은 변수는 객체 변수가 아닌 클래스 변수로써 객체가 생성되기 전에 이미 존재함.
    
			 데이터 영역 - 클래스      /     heap 영역 - 객체

    
	(c) static의 장점과 단점
    
 	   장점: 객체 생성을 하지 않고도 사용 가능.
    
 	   단점: 가비지 콜렉터의 관리 밖에 있기 때문에 항상 메모리에 상주해 있음. 
		—> 시스템이 오랜 시간 동안 돌아가고, 시스템 운영 속도가 느려질 수 있음


※ Static 변수는 변하지 않는 상수를 정의해 놓을 때 주로 사용함. 
(ex) 끝도 없는 원주율의 경우, 3.1415 등으로 상수를 지정하고 사용하기 위함.